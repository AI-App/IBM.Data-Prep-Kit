import argparse
import os
import sys

from data_processing.ray import TransformLauncher
from data_processing.utils import ParamsUtils
from noop_transform import NOOPTransformConfiguration


if __name__ == "__main__":
    # create launcher
    launcher = TransformLauncher(transform_runtime_config=NOOPTransformConfiguration())
    # create parameters
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-i",
        "--input_folder",
        type=str,
        default=os.path.join(os.sep, "tmp"),
        help="local folder hosting the input files used by the transformer",
    )
    parser.add_argument(
        "-o",
        "--output_folder",
        type=str,
        default=os.path.join(os.sep, "tmp"),
        help="local folder hosting the output files generated by transformer",
    )
    args = parser.parse_args()
    local_conf = {
        "input_folder": args.input_folder,
        "output_folder": args.output_folder,
    }
    worker_options = {"num_cpus": 0.8}
    code_location = {"github": "github", "commit_hash": "12345", "path": "path"}
    params = {
        "run_locally": True,
        "max_files": -1,
        "local_config": ParamsUtils.convert_to_ast(local_conf),
        "worker_options": ParamsUtils.convert_to_ast(worker_options),
        "num_workers": 5,
        "checkpointing": False,
        "pipeline_id": "pipeline_id",
        "job_id": "job_id",
        "creation_delay": 0,
        "code_location": ParamsUtils.convert_to_ast(code_location),
        "noop_sleep_sec": 5,
    }
    sys.argv = ParamsUtils.dict_to_req(d=params)

    # launch
    launcher.launch()
