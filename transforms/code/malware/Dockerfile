FROM docker.io/rayproject/ray:2.9.3-py310 AS base
USER root
RUN apt -y update \
    && apt install -y clamav-daemon \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
USER ray

FROM docker.io/clamav/clamav:latest AS clamav
FROM base AS clamav-local
USER root
COPY --chown=ray:users --from=clamav /var/lib/clamav/ /var/lib/clamav/
COPY --chown=ray:users clamd.conf /etc/clamav/clamd.conf
RUN freshclam \
    && mkdir -p /var/run/clamav \
    && chown -R ray:users /var/run/clamav /var/log/clamav /var/lib/clamav
USER ray
CMD ["/bin/bash", "-c", "clamd --debug --foreground"]

FROM base AS malware

ARG ARTIFACTORY_USER
ARG ARTIFACTORY_API_KEY
ARG EXTRA_ARTIFACTORY_URL

COPY --from=clamav-local --chown=ray:users /var/lib/clamav/ /var/lib/clamav/
COPY --from=clamav-local --chown=ray:users /etc/clamav/clamd.conf /etc/clamav/clamd.conf
COPY --from=clamav-local --chown=ray:users /var/log/clamav/clamav.log /var/log/clamav/clamav.log
COPY --from=clamav-local --chown=ray:users /var/run/clamav /var/run/clamav
COPY requirements.txt requirements.txt

RUN pip install --no-cache-dir -r requirements.txt \
    && rm -rf requirements.txt .cache/pip
# Copy in the data processing framework source/project and install it
# This is expected to be placed in the docker context before this is run (see the make image).
COPY data-processing-lib/ data-processing-lib/
USER root
RUN chown -R ray /home/ray/data-processing-lib
USER ray
RUN pip install --no-cache-dir --extra-index-url ${EXTRA_ARTIFACTORY_URL} --no-cache-dir -e data-processing-lib


COPY src/*_transform.py  ./
ENV PYTHONPATH /home/ray

RUN pip install --no-cache-dir pytest
COPY test/ test/
COPY test-data/ test-data/

USER root
RUN chown -R ray /home/ray/test
RUN chown -R ray /home/ray/test-data
USER ray
